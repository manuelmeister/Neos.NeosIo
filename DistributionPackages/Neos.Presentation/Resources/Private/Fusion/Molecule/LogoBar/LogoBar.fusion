prototype(Neos.Presentation:LogoBar) < prototype(Neos.Fusion:Component) {

    @styleguide {
        title = 'Logo-Bar'
        props {
            assets = Neos.Fusion:Map {
                items = ${['solarwatt.svg', 'heineken.svg', 'swisscom.svg', 't3n.png']}
                itemRenderer = Neos.Fusion:DataStructure {
                    src = ${StaticResource.uri('Neos.Presentation', 'Public/Assets/Styleguide/Logos/' + item)}
                    alternativeText = ${'Logo ' + item}
                }
            }
        }
    }

    @propTypes {
        assets = PropTypes:Array {
            type = PropTypes:DataStructure {
                src = PropTypes:String
                alternativeText = PropTypes:String
            }
        }
        grayscale = PropTypes:Bool
    }

    assets = null
    grayscale = false

    @private {
        numberOfAssets = ${Type.isArray(props.assets) ? Array.length(props.assets) : 0}
        duplications = ${private.numberOfAssets > 3 ? 3 : 0}
    }

    renderer = afx`
        <div
            @if={private.numberOfAssets}
            class={['flex justify-center overflow-x-clip', props.grayscale ? 'grayscale' : null]}
            x-data={AlpineJS.xData('LogoBar', private.duplications)}
        >
            <ul
                x-random-children
                class={['flex item-list items-center [&_li]:mx-28', private.duplications ? 'animate-infinite-scroll' : null]}
            >
                <Neos.Fusion:Loop items={props.assets}>
                    <li @if={item.src}><img class="max-h-10 md:max-h-16 max-w-none" alt={item.alternativeText} src={item.src}/></li>
                </Neos.Fusion:Loop>
            </ul>
        </div>
    `
}
